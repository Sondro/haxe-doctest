dist: bionic

language: haxe

os:
  - linux
  - osx

git:
  depth: 2

cache:
  directories:
    - $HOME/haxe/lib
    - $HOME/.cache/luarocks

haxe:
  - "4.0.5"
  - development

env:
  - HAXE_TARGET=cpp
  - HAXE_TARGET=cs
  - HAXE_TARGET="interp -D eval-stack"
  - HAXE_TARGET=flash
  - HAXE_TARGET=hl
  - HAXE_TARGET=java
  - HAXE_TARGET="java -D jvm"
  - HAXE_TARGET=js
  - HAXE_TARGET=lua
  - HAXE_TARGET=neko
  - HAXE_TARGET=node
  - HAXE_TARGET=php7
  - HAXE_TARGET=python

matrix:
  fast_finish: true
  allow_failures:
    - haxe: development
    - env: HAXE_TARGET=flash  # see https://github.com/travis-ci/travis-ci/issues/8481
    - env: HAXE_TARGET="java -D jvm" # no idea why it fails on travis. works locally
    - os: osx
  exclude:
    - haxe: development
      os: osx

install:
  #- haxelib git tink_io https://github.com/haxetink/tink_io pure
  #- haxelib git tink_cli https://github.com/haxetink/tink_cli pure
  #- haxelib git travix https://github.com/back2dos/travix && pushd . && cd $(haxelib config)travix/git && haxe build-neko.hxml && popd
  #- haxelib run travix install
  - haxelib dev haxe-doctest .
  - haxelib install travix
  - haxelib install hscript
  - haxelib install hx3compat
  - haxelib install munit
  - haxelib install utest
  - haxelib install tink_testrunner
  # install node 12 LTS as workaround for https://github.com/back2dos/travix/issues/120
  - |-
    if [ "$HAXE_TARGET" == "js" ] && [ "$TRAVIS_OS_NAME" == "linux" ]; then
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash && \
      source $HOME/.nvm/nvm.sh && \
      nvm install --lts && \
      nvm use --lts
    fi

script:
  - haxelib run travix $HAXE_TARGET
